{"ast":null,"code":"var _jsxFileName = \"D:\\\\BC_FULL_NODE_JS\\\\JS_typeScripts\\\\Bootcamp_pangestu.s\\\\JS_TypeScript\\\\materi JS dan TS\\\\Front-end\\\\my-app\\\\src\\\\Login\\\\Login.js\";\nimport React, { useState } from 'react';\n// import axios from \"axios\";\n// import { iziToast } from 'izitoast';\n// import 'react-toastify/dist/components/Toast'\nimport AppLogin from '../Api/ApiLogin';\n\n// const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n\n//     let errorMessage = \"\";\n\n//     if (!username || !password) {\n//         errorMessage = \"Username is required\";\n//     } else if (!password) {\n//         errorMessage = \"Password is required\";\n//     }\n\n//     if (errorMessage) {\n//         setState({ errorMessage });\n//         return;\n//     }\n\n//     await AppLogin.login(username,password)\n//     .then(result => {\n//         if(result){\n//             iziToast.success('You are now logged in', {\n//                 position: 'topRight',\n//                 timeout: 3000,\n//                 onClosing: () => console.log('Closing')\n//             });\n//         }else{\n//             setState({ errorMessage: 'Invalid Credentials' });\n//         }\n//     })\n//     .catch(error => {\n//         iziToast.error(error.message, {\n//             position: 'topRight',\n//             timeout: 3000,\n//             onClosing: () => console.log('Closing')\n//         });\n//     })\n//   };\n\n// function MyForm() {\n\n//     return (\n\n//         <main>\n//         {/* <div className='container'>    */}\n//         <section class=\"section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4\">\n//         <div class=\"container\">\n//           <div class=\"row justify-content-center\">\n//             <div class=\"col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center\">\n\n//         <div class=\"card mb-3\">\n//                 <div class=\"card-body\">\n\n//                   <div class=\"pt-4 pb-2\">\n//                     <h5 class=\"card-title text-center pb-0 fs-4\">Login to Your Account</h5>\n//                     <p class=\"text-center small\">Enter your username & password to login</p>\n//                   </div>\n//                   <form className='row g-3 needs-validation' onSubmit={handleSubmit}>\n//                 <div className='col-12'>\n//                     <div className='input-group has-validation'>\n//                     <input type='text' name='username' className='form-control' id='yourUsername' placeholder='masukan username' required pattern='^[a-zA-Z0-9]+$' onChange={handleChange}/>\n//                         <div class=\"invalid-feedback\">Please enter your username.</div>\n//                     </div>\n//                 </div>\n//                 <div className='col-12'>\n//                     <div className='input-group has-validation'>\n//                         <input type='password' name='passwords' className='form-control'id='yourPassword'  placeholder='masukan password' />\n//                         <div class=\"invalid-feedback\">Please enter your password.</div>\n//                     </div>\n//                 </div>\n//                 <div class=\"col-12\">\n//                       <button class=\"btn btn-primary w-100\" type=\"submit\" >Login</button>\n//                </div>\n//             </form>\n//             </div>\n//             </div>\n//             </div>\n//             </div>\n//             </div>\n//             </section>\n//         {/* </div>     */}\n//     </main>\n\n//     )\n//   }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyForm() {\n  const handleSubmit = e => {\n    e.preventDefault();\n    AppLogin.Login(username, password).then(result => {\n      if (result) {\n        console.log('Login success');\n      } else {\n        setErrorMessage(\"Invalid credentials\");\n      }\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_c = MyForm;\nexport default MyForm;\n\n// const [username, setUsername] = useState('');\n// const [password, setPassword] = useState('');\n// const [error, setError] = useState('');\n\n// const handleSubmit = async (e) => {\n// e.preventDefault();\n// try {\n// const result = await AppLogin.login(username, password);\n// if (result) {\n// console.log('You are now logged in');\n// } else {\n// setError('Invalid credentials');\n// }\n// } catch (err) {\n// setError(err.message);\n// }\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","AppLogin","MyForm","handleSubmit","e","preventDefault","Login","username","password","then","result","console","log","setErrorMessage","catch","error","message","setUsername","target","value","setPassword","errorMessage","color"],"sources":["D:/BC_FULL_NODE_JS/JS_typeScripts/Bootcamp_pangestu.s/JS_TypeScript/materi JS dan TS/Front-end/my-app/src/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// import axios from \"axios\";\r\n// import { iziToast } from 'izitoast';\r\n// import 'react-toastify/dist/components/Toast'\r\nimport AppLogin from '../Api/ApiLogin';\r\n\r\n// const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n  \r\n//     let errorMessage = \"\";\r\n\r\n//     if (!username || !password) {\r\n//         errorMessage = \"Username is required\";\r\n//     } else if (!password) {\r\n//         errorMessage = \"Password is required\";\r\n//     }\r\n\r\n//     if (errorMessage) {\r\n//         setState({ errorMessage });\r\n//         return;\r\n//     }\r\n\r\n//     await AppLogin.login(username,password)\r\n//     .then(result => {\r\n//         if(result){\r\n//             iziToast.success('You are now logged in', {\r\n//                 position: 'topRight',\r\n//                 timeout: 3000,\r\n//                 onClosing: () => console.log('Closing')\r\n//             });\r\n//         }else{\r\n//             setState({ errorMessage: 'Invalid Credentials' });\r\n//         }\r\n//     })\r\n//     .catch(error => {\r\n//         iziToast.error(error.message, {\r\n//             position: 'topRight',\r\n//             timeout: 3000,\r\n//             onClosing: () => console.log('Closing')\r\n//         });\r\n//     })\r\n//   };\r\n\r\n\r\n\r\n// function MyForm() {\r\n    \r\n//     return (\r\n\r\n//         <main>\r\n//         {/* <div className='container'>    */}\r\n//         <section class=\"section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4\">\r\n//         <div class=\"container\">\r\n//           <div class=\"row justify-content-center\">\r\n//             <div class=\"col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center\">\r\n\r\n//         <div class=\"card mb-3\">\r\n//                 <div class=\"card-body\">\r\n\r\n//                   <div class=\"pt-4 pb-2\">\r\n//                     <h5 class=\"card-title text-center pb-0 fs-4\">Login to Your Account</h5>\r\n//                     <p class=\"text-center small\">Enter your username & password to login</p>\r\n//                   </div>\r\n//                   <form className='row g-3 needs-validation' onSubmit={handleSubmit}>\r\n//                 <div className='col-12'>\r\n//                     <div className='input-group has-validation'>\r\n//                     <input type='text' name='username' className='form-control' id='yourUsername' placeholder='masukan username' required pattern='^[a-zA-Z0-9]+$' onChange={handleChange}/>\r\n//                         <div class=\"invalid-feedback\">Please enter your username.</div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className='col-12'>\r\n//                     <div className='input-group has-validation'>\r\n//                         <input type='password' name='passwords' className='form-control'id='yourPassword'  placeholder='masukan password' />\r\n//                         <div class=\"invalid-feedback\">Please enter your password.</div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div class=\"col-12\">\r\n//                       <button class=\"btn btn-primary w-100\" type=\"submit\" >Login</button>\r\n//                </div>\r\n//             </form>\r\n//             </div>\r\n//             </div>\r\n//             </div>\r\n//             </div>\r\n//             </div>\r\n//             </section>\r\n//         {/* </div>     */}\r\n//     </main>\r\n      \r\n//     )\r\n//   }\r\nfunction MyForm() {\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    AppLogin.Login(username, password)\r\n        .then(result => {\r\n            if (result) {\r\n                console.log('Login success')\r\n            } else {\r\n                setErrorMessage(\"Invalid credentials\")\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setErrorMessage(error.message)\r\n        })\r\n}\r\n\r\nreturn (\r\n    <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <label>Username:</label>\r\n            <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n        </div>\r\n        <div>\r\n            <label>Password:</label>\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        <div>\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n        </div>\r\n    </form>\r\n)\r\n\r\n  \r\n  }\r\n  \r\n\r\nexport default MyForm\r\n\r\n\r\n\r\n// const [username, setUsername] = useState('');\r\n// const [password, setPassword] = useState('');\r\n// const [error, setError] = useState('');\r\n\r\n// const handleSubmit = async (e) => {\r\n// e.preventDefault();\r\n// try {\r\n// const result = await AppLogin.login(username, password);\r\n// if (result) {\r\n// console.log('You are now logged in');\r\n// } else {\r\n// setError('Invalid credentials');\r\n// }\r\n// } catch (err) {\r\n// setError(err.message);\r\n// }"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA;AACA,OAAOC,QAAQ,MAAM,iBAAiB;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA,SAASC,MAAM,GAAG;EAEhB,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBJ,QAAQ,CAACK,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC,CAC7BC,IAAI,CAACC,MAAM,IAAI;MACZ,IAAIA,MAAM,EAAE;QACRC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAChC,CAAC,MAAM;QACHC,eAAe,CAAC,qBAAqB,CAAC;MAC1C;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZF,eAAe,CAACE,KAAK,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEb,YAAa;IAAA,wBACzB;MAAA,wBACI;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEI,QAAS;QAAC,QAAQ,EAAEH,CAAC,IAAIa,WAAW,CAACb,CAAC,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChF,eACN;MAAA,wBACI;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAO,IAAI,EAAC,UAAU;QAAC,KAAK,EAAEX,QAAS;QAAC,QAAQ,EAAEJ,CAAC,IAAIgB,WAAW,CAAChB,CAAC,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpF,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAA,UACKE,YAAY,iBAAI;QAAG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAA,UAAED;MAAY;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAC7D;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAIT;AAAC,KAnCMnB,MAAM;AAsCf,eAAeA,MAAM;;AAIrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}