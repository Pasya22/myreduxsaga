{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootSaga from '../sagas';\nimport userReducers from \"../Reducer/userReducer\";\nimport { combineReducers } from \"redux\";\n\n// daftar reducer\nconst saga = createSagaMiddleware();\nconst reducer = combineReducers({\n  userReducer: userReducers\n});\n\n// config store\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(saga)\n});\nsaga.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootSaga","userReducers","combineReducers","saga","reducer","userReducer","store","middleware","getDefaultMiddleware","serializableCheck","concat","run"],"sources":["D:/BC_FULL_NODE_JS/JS_typeScripts/Bootcamp_pangestu.s/JS_TypeScript/materi JS dan TS/Front-end/ReduxSagaNew/src/Redux/Store/index.js"],"sourcesContent":["import {\n    configureStore\n} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from '@redux-saga/core'\nimport rootSaga from '../sagas'\nimport userReducers from \"../Reducer/userReducer\";\nimport {\n    combineReducers\n} from \"redux\";\n\n// daftar reducer\nconst saga = createSagaMiddleware()\nconst reducer = combineReducers({\n    userReducer: userReducers,\n\n})\n\n// config store\nconst store = configureStore({\n    reducer,\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: false\n        }).concat(saga)\n\n})\nsaga.run(rootSaga)\nexport default store;"],"mappings":"AAAA,SACIA,cAAc,QACX,kBAAkB;AACzB,OAAOC,oBAAoB,MAAM,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SACIC,eAAe,QACZ,OAAO;;AAEd;AACA,MAAMC,IAAI,GAAGJ,oBAAoB,EAAE;AACnC,MAAMK,OAAO,GAAGF,eAAe,CAAC;EAC5BG,WAAW,EAAEJ;AAEjB,CAAC,CAAC;;AAEF;AACA,MAAMK,KAAK,GAAGR,cAAc,CAAC;EACzBM,OAAO;EACPG,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;EACvB,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI;AAEtB,CAAC,CAAC;AACFA,IAAI,CAACQ,GAAG,CAACX,QAAQ,CAAC;AAClB,eAAeM,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}